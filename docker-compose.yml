version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    environment:
      - RUNNING_IN_DOCKER=true
      - PORT=${FRONTEND_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - mynetwork

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
      - PORT=${BACKEND_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=development
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    networks:
      - mynetwork

  db:
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - NODE_ENV=development
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

networks:
  mynetwork: {}

volumes:
  postgres_data: {}
